buildscript {
    ext {
        activationVersion = '1.1.1'
        guavaVersion = '28.1-jre'
        javaxValidationVersion = '2.0.1.Final'
        junitVersion = '5.5.2'
        lombokVersion = '1.18.10'
        mockitoVersion = '3.1.0'
        ocppVersion = '0.5-SNAPSHOT'
        springBootVersion = '2.2.1.RELEASE'
    }
}

plugins {
    id 'io.franzbecker.gradle-lombok' version "3.2.0"
    id 'java-library'
    id 'maven-publish'
    id 'org.sonarqube' version "2.7"
    id 'jacoco'
}

lombok {
    version = "${lombokVersion}"
}

group = 'com.valtech.springframework.boot'
version = '1.0.0.RELEASE'

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

sonarqube {
    def exclusions = [
            "**/com/valtech/springframework/ocpp/config/**/*Properties.java",
            "**/com/valtech/springframework/ocpp/**/*EventHandlerAdapter.java",
            "**/com/valtech/springframework/ocpp/**/*EventsAdapter.java"
    ]
    properties {
        property 'sonar.coverage.exclusions', exclusions
    }
}

compileJava.dependsOn(processResources)

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: "${springBootVersion}"

    api group: 'eu.chargetime.ocpp', name: 'v1_6', version: "${ocppVersion}"
    api group: 'javax.validation', name: 'validation-api', version: "${javaxValidationVersion}"

    implementation group: 'com.google.guava', name: 'guava', version: "${guavaVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter', version: "${springBootVersion}"

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "${junitVersion}"
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: "${junitVersion}"
    testImplementation group: 'org.mockito', name: 'mockito-core', version: "${mockitoVersion}"
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: "${mockitoVersion}"
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: "${springBootVersion}"

    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: "${junitVersion}"
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}
